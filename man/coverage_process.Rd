% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coverage_process.R
\name{coverage_process}
\alias{coverage_process}
\title{Wrapper function for processing coverage}
\usage{
coverage_process(
  junctions,
  ref,
  unannot_width = 20,
  coverage_paths_case,
  coverage_paths_control,
  coverage_chr_control = NULL,
  load_func = .coverage_load,
  bp_param = BiocParallel::SerialParam(),
  norm_const = 1,
  score_func = .zscore,
  ...
)
}
\arguments{
\item{junctions}{junction data as a
\link[SummarizedExperiment:RangedSummarizedExperiment-class]{RangedSummarizedExperiment-class}
object.}

\item{ref}{either path to gtf/gff3 or object of class \code{TxDb} imported using
\code{\link[GenomicFeatures]{makeTxDbFromGFF}}.}

\item{unannot_width}{integer scalar determining the width of the region to
obtain coverage from when the end of of a junction does not overlap an
existing exon.}

\item{coverage_paths_case}{paths to the BigWig/BAM files containing the
coverage of your case samples. Must be the same length and order to the
rows of the assays in \code{junctions}.}

\item{coverage_paths_control}{paths to the BigWig/BAM files}

\item{coverage_chr_control}{either "chr" or "no_chr", indicating the
chromosome format of control coverage data. To be used if you know the
chromosome format of the control BigWig/BAM files is different to that of
your junctions.}

\item{load_func}{a function to use to load coverage. Currently only for
internal use to increase testing speed.}

\item{bp_param}{a
\link[BiocParallel:BiocParallelParam-class]{BiocParallelParam-class} instance
denoting whether to parrallelise the loading of coverage across BigWigs.}

\item{norm_const}{numeric to add to the normalised coverage to avoid dividing
by 0s and resulting NaN or Inf values.}

\item{score_func}{function to score junctions by abnromality. By default,
will use a z-score. But this can be switched dependent on the format of the
user's junction data. Function must take as input an x and y argument. x
being the case junctions and y being the controls. This must return a
numeric vector equal to the length of x with each element corresponding to
a abnormality of a junction in each case sample.}

\item{...}{additional arguments passed to \code{score_func}.}
}
\value{
\link[SummarizedExperiment:RangedSummarizedExperiment-class]{RangedSummarizedExperiment-class}
object containing junction data with coverage scores.
}
\description{
\code{junction_process} wraps all "coverage_" prefixed functions in
\code{dasper}. This is designed to simplify processing of the covearge data
for those familiar or uninterested with the intermediates.
}
\examples{
\dontrun{
ref <-
    "ftp://ftp.ensembl.org/pub/release-100/gtf/homo_sapiens/Homo_sapiens.GRCh38.100.gtf.gz"
junctions_w_coverage_2 <-
    coverage_process(
        junctions_example[, 1:2],
        ref,
        unannot_width = 20,
        coverage_paths_case,
        coverage_paths_control,
        coverage_chr_control = NULL,
        load_func = load_rand,
        norm_const = 2,
        score_func = .zscore,
        sd_const = 0.02
    )
junctions_w_coverage_2
}

}
