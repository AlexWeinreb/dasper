load_func = .load_STAR,
chr_to_filter = c(1:22, "X", "Y", "M"))
juncs[["metadata"]]
juncs[["raw_count"]]
juncs <-
merge_junc(junc_paths = c("../data-raw/example_juncs_1.txt",
"../data-raw/example_juncs_2.txt"),
sample_ids = c("eg1", "eg2"),
load_func = .load_STAR,
chr_to_filter = c(1:22, "X", "Y", "M"))
juncs[["metadata"]]
juncs[["raw_count"]]
load("../tests/testthat/example_gtf.rda")
juncs[["metadata"]] <-
annotate_junc_ref(junc_metadata = juncs[["metadata"]],
gtf = ref)
juncs[["metadata"]]
blacklist_gr <- rtracklayer::import("/data/references/ENCODE_blacklist_v2/hg38-blacklist.v2.bed", format = "bed")
GenomeInfoDb::seqlevels(blacklist_gr) <- GenomeInfoDb::seqlevels(blacklist_gr) %>% stringr::str_replace("chr", "")
juncs <-
filter_junc(junc_metadata = juncs[["metadata"]],
raw_count = juncs[["raw_count"]],
count_thresh = 5,
n_samp = 1,
junc_width = c(20, 1e6),
junc_cats = c("ambig_gene", "none"),
blacklist_gr = blacklist_gr)
junc_metadata <- juncs[["metadata"]]
raw_count <- juncs[["raw_count"]]
junc_metadata <- juncs[["metadata"]]
junc_metadata
juncs[["metadata"]]
juncs <- normalise_junc(junc_metadata = juncs[["metadata"]],
raw_count = juncs[["raw_count"]])
juncs
library(tidyverse)
library(stringr)
samp_metadata <-
read_delim("http://snaptron.cs.jhu.edu/data/gtex/samples.tsv", delim = "\t")
samp_metadata <- samp_metadata %>%
filter(SMTSD %in% c("Cells - Transformed fibroblasts"),
SMAFRZE == "USE ME") %>%
mutate(SMTSD_tidy = SMTSD %>%
str_to_lower() %>%
str_replace_all(" |-", "_") %>%
str_replace_all("__*", "_"))
# keep only chromosomes 1-22, X, Y and M
chr_info <- GenomeInfoDb::fetchExtendedChromInfoFromUCSC("hg38") %>%
dplyr::filter(UCSC_seqlevel %in% stringr::str_c("chr", c(1:22, "X", "Y", "M")))
for(tissue in unique(samp_metadata[["SMTSD_tidy"]])){
GTEx_juncs <- tibble()
for(i in 1:length(chr_info)){
juncs_per_chr <-
read_delim(str_c("http://snaptron.cs.jhu.edu/gtex/snaptron?regions=",
chr_info[["UCSC_seqlevel"]][i], ":1-", chr_info[["UCSC_seqlength"]][i],
"&sids=", str_c(samp_metadata[["rail_id"]], collapse = ",")),
delim = "\t")
GTEx_juncs <- bind_rows(GTEx_juncs, juncs_per_chr)
}
}
samp_metadata[["SMTSD_tidy"]]
for(tissue in unique(samp_metadata[["SMTSD_tidy"]])){
GTEx_juncs <- tibble()
for(i in 1:length(chr_info)){
juncs_per_chr <-
read_delim(str_c("http://snaptron.cs.jhu.edu/gtex/snaptron?regions=",
chr_info[["UCSC_seqlevel"]][i],
":1-",
chr_info[["UCSC_seqlength"]][i],
"&sids=", str_c(samp_metadata[["rail_id"]], collapse = ",")),
delim = "\t")
GTEx_juncs <- bind_rows(GTEx_juncs, juncs_per_chr)
}
}
chr_info
system.time()
print(str_c(Sys.time(), "Downloading junction data for ", chr_info[["UCSC_seqlevel"]][i]))
dplyr::filter(UCSC_seqlevel %in% stringr::str_c("chr", c(21))
# keep only chromosomes 1-22, X, Y and M
# str_c("chr", c(1:22, "X", "Y", "M")
chr_info <- GenomeInfoDb::fetchExtendedChromInfoFromUCSC("hg38") %>%
dplyr::filter(UCSC_seqlevel %in% stringr::str_c("chr", c(21)))
for(tissue in unique(samp_metadata[["SMTSD_tidy"]])){
GTEx_juncs <- tibble()
for(i in 1:length(chr_info)){
print(str_c(Sys.time(), " - downloading junction data for ", chr_info[["UCSC_seqlevel"]][i]))
juncs_per_chr <-
read_delim(str_c("http://snaptron.cs.jhu.edu/gtex/snaptron?regions=",
chr_info[["UCSC_seqlevel"]][i],
":1-",
chr_info[["UCSC_seqlength"]][i],
"&sids=", str_c(samp_metadata[["rail_id"]], collapse = ",")),
delim = "\t")
GTEx_juncs <- bind_rows(GTEx_juncs, juncs_per_chr)
}
}
chr_info[["UCSC_seqlevel"]][i]
chr_info
for(tissue in unique(samp_metadata[["SMTSD_tidy"]])){
GTEx_juncs <- tibble()
for(i in 1:length(chr_info)){
print(str_c(Sys.time(), " - downloading junction data for ", chr_info[["UCSC_seqlevel"]][i]))
juncs_per_chr <-
read_delim(str_c("http://snaptron.cs.jhu.edu/gtex/snaptron?regions=",
chr_info[["UCSC_seqlevel"]][i],
":1-",
chr_info[["UCSC_seqlength"]][i],
"&sids=", str_c(samp_metadata[["rail_id"]], collapse = ",")),
delim = "\t")
GTEx_juncs <- bind_rows(GTEx_juncs, juncs_per_chr)
}
}
for(tissue in unique(samp_metadata[["SMTSD_tidy"]])){
GTEx_juncs <- tibble()
for(i in 1:nrow(chr_info)){
print(str_c(Sys.time(), " - downloading junction data for ", chr_info[["UCSC_seqlevel"]][i]))
juncs_per_chr <-
read_delim(str_c("http://snaptron.cs.jhu.edu/gtex/snaptron?regions=",
chr_info[["UCSC_seqlevel"]][i],
":1-",
chr_info[["UCSC_seqlength"]][i],
"&sids=", str_c(samp_metadata[["rail_id"]], collapse = ",")),
delim = "\t")
GTEx_juncs <- bind_rows(GTEx_juncs, juncs_per_chr)
}
}
GTEx_juncs
GTEx_juncs_df <-
GTEx_juncs$samples %>%
str_split(pattern = ",")
GTEx_juncs_df
GTEx_juncs
GTEx_juncs_df <-
GTEx_juncs$samples %>%
str_split(pattern = ",")
GTEx_juncs_df
GTEx_juncs_df <- GTEx_juncs_df %>%
lapply(FUN = tidy_raw_count) %>%
do.call(args = ., bind_rows)
GTEx_juncs_df <- GTEx_juncs_df %>%
lapply(FUN = tidy_raw_count) %>%
do.call(args = ., bind_rows)
tidy_raw_count <- function(x){
x <- x[x != ""]
y <- x %>%
str_replace(".*:", "") %>%
as.integer()
names(y) <- x %>%
str_replace(":.*", "")
y <- y %>% t() %>% as_tibble()
return(y)
}
GTEx_juncs_df <- GTEx_juncs_df %>%
lapply(FUN = tidy_raw_count) %>%
do.call(args = ., bind_rows)
GTEx_juncs_df
GRanges("chr18:74700385", "chr4:143226886")
library(GenomicRanges)
GRanges("chr18:74700385", "chr4:143226886")
GRanges(c("chr18:74700385", "chr4:143226886"))
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
vars <-
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
library(liftover)
library(liftOver)
library(rtracklayer)
vars <-
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
variants <-
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
chain <- import.chain("hg19ToHg18.over.chain")
chain <- import.chain("/data/liftover/hg19/hg19ToHg38.over.chain")
variants_hg37 <-
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
variants_hg38 <- liftOver(variants_hg37, chain)
variants_hg38
variants_hg38 <- liftOver(variants_hg37, chain) %>%
unlist()
variants_hg38
read_delim("https://snca.atica.um.es/browser/endpoint/203f16ba-f9ed-4156-bae9-68c0b498917d/session/2e89f9ee3fb51471dbdf6108dcaa0d90/download/d_high_confidence?w=",
delim = "\t")
read_delim("https://snca.atica.um.es/browser/endpoint/203f16ba-f9ed-4156-bae9-68c0b498917d/session/2e89f9ee3fb51471dbdf6108dcaa0d90/download/d_high_confidence?w=",
delim = "\t", )
download.file(url = "https://snca.atica.um.es/browser/endpoint/203f16ba-f9ed-4156-bae9-68c0b498917d/session/2e89f9ee3fb51471dbdf6108dcaa0d90/download/d_high_confidence?w=",
destfile = "~/")
download.file(url = "https://snca.atica.um.es/browser/endpoint/203f16ba-f9ed-4156-bae9-68c0b498917d/session/2e89f9ee3fb51471dbdf6108dcaa0d90/download/d_high_confidence?w=",
destfile = "~/ERs_2_split_read_1_gene_high_confidence.csv.gz")
variants_hg38 <- liftOver(variants_hg37, chain) %>%
unlist()
ERs_2_split_read_1_gene_high_confidence.csv <-
read_delim("/home/dzhang/projects/OMIM_wd/results/export_ER_details/ERs_2_split_read_1_gene_high_confidence.csv.gz",
delim = ",")
ERs_2_split_read_1_gene_high_confidence.csv <-
read_delim("/home/dzhang/projects/OMIM_wd/results/export_ER_details/ERs_2_split_read_1_gene_high_confidence.csv.gz",
delim = ",", comment = "#")
ERs_2_split_read_1_gene_high_confidence.csv
ERs_2_split_read_1_gene_high_confidence <-
read_delim("/home/dzhang/projects/OMIM_wd/results/export_ER_details/ERs_2_split_read_1_gene_high_confidence.csv.gz",
delim = ",", comment = "#")
ERs_2_split_read_1_gene_high_confidence %>%
GRanges
ERs_2_split_read_1_gene_high_confidence %>%
GRanges() %>%
findOverlaps(variants_hg37)
variants_hg38 <- liftOver(variants_hg37, chain)
variants_hg38
variants_hg38 <- liftOver(variants_hg37, chain) %>%
unlist()
ERs_2_split_read_1_gene_high_confidence %>%
GRanges() %>%
findOverlaps(variants_hg38)
ERs_2_split_read_1_gene_high_confidence
ERs_2_split_read_1_gene_high_confidence <-
read_delim("/home/dzhang/projects/OMIM_wd/results/export_ER_details/all_ERs.csv.gz",
delim = ",", comment = "#")
ERs_2_split_read_1_gene_high_confidence %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits <-
ERs_2_split_read_1_gene_high_confidence %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits
ERs_2_split_read_1_gene_high_confidence[S4Vectors::queryHits(hits),]
variants_hg38
source('~/projects/OMIM_wd/vizER/vizER/visualise_ER_example_gviz_web_app.R', echo=TRUE)
library(Gviz)
install.packages("jpeg")
source('~/projects/OMIM_wd/vizER/vizER/visualise_ER_example_gviz_web_app.R', echo=TRUE)
variants_hg38
variants_hg37 <-
GRanges(c("chr18:74700385", "chr4:143226886"),
gene = c("MBP", "INPP4B"))
chain <- import.chain("/data/liftover/hg19/hg19ToHg38.over.chain")
variants_hg38 <- liftOver(variants_hg37, chain) %>%
unlist()
variants_hg38
add_custom_annot_track <- "chr4:142305733-142305733"
gtex_split_read_table_mean_cov_df <- get_gtex_split_read_table_mean_cov_n_samples_df(gtex_tissue_name_formatting)
ensembl_grch38_v92_genes_txdb <-
generate_txDb_from_gtf(gtf_gff3_path = str_c(path_to_data_folder, "Homo_sapiens.GRCh38.92.gtf"),
output_path = str_c(path_to_data_folder, "ensembl_grch38_v92_txdb.sqlite"),
seq_levels_to_keep = c(1:22, "X", "Y", "MT"), genome_build = "hg38")
constraint_conserv_ratio_split_by_chr_paths_df <-
data_frame(paths = list.files(str_c(path_to_data_folder, "/CNC_scores"), full.names = T),
chr = paths %>% str_replace(".*annot_CDTS_cons_rank_", "") %>%
str_replace("\\.rda", ""))
aceview_hg38_txdb <-
generate_txDb_from_gtf(gtf_gff3_path = str_c(path_to_data_folder, "AceView.ncbi_37.genes_gff.gff"),
output_path = str_c(path_to_data_folder, "aceview_hg38_txdb.sqlite"),
seq_levels_to_keep = c(1:22, "X", "Y"), genome_build = "hg19", convert_hg19_to_hg38 = T)
ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific_db <- ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific_db
txdb <- ensembl_grch38_v92_genes_txdb
ensembl_gene_id_to_symbol_df <- ensembl_gene_id_to_symbol_df_v92
gene_id <- "INPP4B"
tissues_to_plot <- c("brain_cerebellum")
genome_build <- "hg38"
get_constraint <- T
get_conserv <- T
get_mean_cov <- T
propor_samples_split_read <- 0.05
extend_region_to_plot <- "1000"
collapseTranscripts <-  "meta"
transcriptAnnotation <-  "gene"
aceview_annot <- NULL
add_custom_annot_track <- "chr4:142305733-142305733"
all_split_reads <- F
get_conserv_constraint_ratio <- T
ERs_w_annotation_df_to_display_w_split_read_data <-
get_ER_table_to_display(ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific_db, txdb, ensembl_gene_id_to_symbol_df, gene_id,
tissues_to_plot, gtex_split_read_table_mean_cov_df, extend_region_to_plot)
visualise_ER_example(ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific_db,
txdb,
ensembl_gene_id_to_symbol_df,
gene_id,
tissues_to_plot,
genome_build,
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint,
get_conserv,
get_mean_cov,
propor_samples_split_read,
extend_region_to_plot,
collapseTranscripts,
transcriptAnnotation,
aceview_annot,
add_custom_annot_track,
all_split_reads,
get_conserv_constraint_ratio)
Homo_sapiens.GRCh38.97 <- import("/data/references/ensembl/gtf_gff3/v97/Homo_sapiens.GRCh38.97.gtf")
Homo_sapiens.GRCh38.97
hits <-
Homo_sapiens.GRCh38.97 %>%
GRanges() %>%
findOverlaps(variants_hg38)
Homo_sapiens.GRCh38.97
seqlevels(Homo_sapiens.GRCh38.97) <- str_c("chr", seqlevels(Homo_sapiens.GRCh38.97))
Homo_sapiens.GRCh38.97
hits <-
Homo_sapiens.GRCh38.97 %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits
check <- Homo_sapiens.GRCh38.97[S4Vectors::queryHits(hits)]
check
check %>% as.data.frame()
check <- check %>% as.data.frame()
View(check)
Homo_sapiens.GRCh38.97_exon <- Homo_sapiens.GRCh38.97[Homo_sapiens.GRCh38.97$type == "exon"]
hits <-
Homo_sapiens.GRCh38.97_exon %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits <- Homo_sapiens.GRCh38.97_exon[S4Vectors::queryHits(hits)]
hits
hits %>% as.data.frame()
variants_hg38
Homo_sapiens.GRCh38.97$type %>% unique()
Homo_sapiens.GRCh38.97_exon_utr <- Homo_sapiens.GRCh38.97[Homo_sapiens.GRCh38.97$type %in% c("exon", "five_prime_utr", "three_prime_utr")]
hits <-
Homo_sapiens.GRCh38.97_exon %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits <- Homo_sapiens.GRCh38.97_exon[S4Vectors::queryHits(hits)]
hits %>% as.data.frame()
hits
Homo_sapiens.GRCh38.97_exon_utr$type %>% unique()
hits <-
Homo_sapiens.GRCh38.97_exon %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits
hits <- Homo_sapiens.GRCh38.97_exon[S4Vectors::queryHits(hits)]
hits <-
Homo_sapiens.GRCh38.97 %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits <- Homo_sapiens.GRCh38.97_exon[S4Vectors::queryHits(hits)]
hits %>% as.data.frame()
hits <- Homo_sapiens.GRCh38.97[S4Vectors::queryHits(hits)]
hits %>% as.data.frame()
hits %>% as.data.frame()
hits$type %>% unique()
hits %>% as.data.frame()
Homo_sapiens.GRCh38.97_exon_utr <- Homo_sapiens.GRCh38.97[Homo_sapiens.GRCh38.97$type %in% c("exon", "five_prime_utr", "three_prime_utr")]
hits <-
Homo_sapiens.GRCh38.97_exon_utr %>%
GRanges() %>%
findOverlaps(variants_hg38)
hits <- Homo_sapiens.GRCh38.97_exon_utr[S4Vectors::queryHits(hits)]
hits %>% as.data.frame()
hits %>% as.data.frame() %>%
write_delim("~/exons_hg38_overlapping_alex_vars.csv", delim = ",")
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("biocthis")
BiocManager::install("lcolladotor/biocthis")
devtools::install_github("lcolladotor/biocthis")
devtools::install_github("lcolladotor
/
biocthis")
devtools::install_github("lcolladotor/biocthis")
devtools::install_github("lcolladotor/biocthis")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("lcolladotor/biocthis")
biocthis::use_bioc_pkg_templates()
install.packages("remotes")
## Next, you might need to install several R packages that you can install with
## the following code:
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_cran(
c(
"available",
"BiocManager",
"devtools",
"knitcitations",
"knitr",
"pkgdown",
"rmarkdown",
"rstudioapi",
"sessioninfo",
"styler",
"usethis"
)
)
remotes::install_cran(
c(
"available",
"BiocManager",
"devtools",
"knitcitations",
"knitr",
"pkgdown",
"rmarkdown",
"rstudioapi",
"sessioninfo",
"styler",
"usethis"
)
)
remotes::install_cran(
c(
# "available",
"BiocManager",
"devtools",
"knitcitations",
"knitr",
"pkgdown",
"rmarkdown",
"rstudioapi",
"sessioninfo",
"styler",
"usethis"
)
)
remotes::install_cran(
c(
"available",
"BiocManager",
"devtools",
"knitcitations",
"knitr",
"pkgdown",
"rmarkdown",
"rstudioapi",
"sessioninfo",
"styler",
"usethis"
)
)
if (!requireNamespace("remotes", quietly = TRUE)) {
## Next, you might need to install several R packages that you can install with
## the following code:
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
install.packages("remotes")
install.packages("remotes")
remotes::install_cran(
c(
"available",
"BiocManager",
"devtools",
"knitcitations",
"knitr",
"pkgdown",
"rmarkdown",
"rstudioapi",
"sessioninfo",
"styler",
"usethis"
)
)
ggpubr::get_palette("npg", 10) %>% scales::show_col
ggpubr::get_palette("npg", 10) %>% scales::show_col()
libray(tidyverse)
library(tidyverse)
ggpubr::get_palette("npg", 10) %>% scales::show_col()
ggpubr::get_palette("npg", 10)
ggpubr::get_palette("Greys", 10)
## Package names have some properties. You can also use:
available::available("dasper")
## Add package development files from biocthis
biocthis::use_bioc_pkg_templates()
biocthis::use_bioc_pkg_templates()
## Move to the next step: setting up Git and GitHub for your package
rstudioapi::navigateToFile(usethis::proj_path("dev", "02_git_github_setup.R"))
## Note that Bioconductor doesn't allow *.Rproj files
## So we have to ignore it before anything else
usethis::use_git_ignore("*.Rproj")
usethis::use_git() ## Choose the option to make the commit, then to restart RStudio
## After the restart, continue by connecting your local git repository to
## GitHub. You might want to use the `organisation` and `private` arguments
args(usethis::use_github)
## If this is your first time running use_github(), you might have to also run:
usethis::browse_github_token()
usethis::edit_r_environ()
## Open your Rprofile file
usethis::edit_r_profile()
## After the restart, continue by connecting your local git repository to
## GitHub. You might want to use the `organisation` and `private` arguments
args(usethis::use_github)
usethis::edit_r_environ()
## Open your Rprofile file
usethis::edit_r_profile()
## Then re-start R
rstudioapi::restartSession()
## Now run use_github()
usethis::use_github()
## If this is your first time running use_github(), you might have to also run:
usethis::browse_github_token()
usethis::edit_r_environ()
## If this is your first time running use_github(), you might have to also run:
usethis::browse_github_token()
usethis::edit_r_environ()
## Then re-start R
rstudioapi::restartSession()
## Now run use_github()
usethis::use_github()
## Move to the next step: setting up your package core files
rstudioapi::navigateToFile(usethis::proj_path("dev", "03_core_files.R"))
biocthis::use_bioc_pkg_templates()
